#!/usr/bin/env ruby

# The MIT License (MIT)
#
# Copyright (c) 2015-16 Comcast Technology Solutions
#
#     Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

require 'time'
require 'linux_stats'
require 'json'

# This executable may serve as a useful command-line tool,
# but its primary purpose is to provide an example client
# for the stats library.

module LinuxStats
  module Default
    DELAY_SEC = 1.1
    ITERATIONS = 3
    PROCESS_FRIENDLY_NAME = 'bash'
    PROCESS_REGEX = 'bash'
  end

  def self.run
    reporter = LinuxStats::Process::Reporter.new
    delay_sec = ARGV[0] ? ARGV[0].to_i : Default::DELAY_SEC
    iterations = ARGV[1] ? ARGV[1].to_i : Default::ITERATIONS
    proc_regex = ARGV[2] ? ARGV[2] : Default::PROCESS_REGEX
    friendly_name = ARGV[3] ? ARGV[3] : proc_regex
    total_time = 0.0
    iterations.times do
      sleep(delay_sec)
      start = Time.now
      report = reporter.report(friendly_name, proc_regex)
      elapsed_time = Time.now - start
      total_time += elapsed_time
      puts JSON.pretty_generate report
      puts "Generating the report took #{elapsed_time*1000} ms"
    end
    puts "Total time: #{total_time * 1000.0} ms, mean: #{1000.0 *total_time/iterations} ms"
  end
end

LinuxStats.run
